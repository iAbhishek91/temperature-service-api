swagger: "2.0"
info:
  description: |
    Determine temperature and humidity based on geo location.
  version: 0.0.1
  title: Temperature API
basePath: /api/v1
schemes:
  - http
paths:
  /weather:
    get:
      summary: Calculate temperature and humidity based on latitude and longitude (geo location)
      parameters:
        - in: header
          name: header
          required: true
          schema:
            $ref: "#/definitions/Request"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Response"
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/APIError"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/APIError"
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/APIError"
definitions:
  Request:
    type: object
    properties:
      loan:
        type: integer
        minimum: 1
        example: 200000
      purchasePrice:
        type: integer
        minimum: 1
        example: 300000
      adults:
        type: integer
        minimum: 1
        maximum: 2
        description: The number of adults in the application
        example: 1
      dependents:
        type: integer
        minimum: 0
        maximum: 3
        description: The number of dependents in the application
        example: 0
      income:
        description: Array with the net income data for each applicant
        type: array
        minimum: 1
        maximum: 2
        items:
          type: object
          description: The net income of an applicant
          properties:
            basicIncome:
              type: integer
              minimum: 1
              example: 50000
            overtime:
              type: integer
              minimum: 0
              default: 0
              example: 0
            commission:
              type: integer
              minimum: 0
              default: 0
              example: 0
            bonus:
              type: integer
              minimum: 0
              default: 0
              example: 0
            otherIncome:
              type: array
              minimum: 1
              items:
                type: integer
                minimum: 1
                example: 1000
          required:
            - basicIncome
      multiple:
        type: boolean
        description: Do the applicant own more than one property
        default: false
        example: false
      country:
        type: string
        description: |
          Applicant's country to help with the tax calculations. 
          As of now Scotland has different tax rules from the rest of the UK
        enum:
          - UK
          - Scotland
        default: UK
        example: UK
      dateOfBirth:
        type: string
        format: date
        example: 01/01/1990
      brand:
        type: string
        enum:
          - Lloyds
          - Halifax
        default: Halifax
        example: Halifax
      commitments:
        type: object
        properties:
          revolvingCredit:
            type: array
            items:
              type: integer
              minimum: 1
              example: 100
          monthlyLoans:
            type: array
            items:
              type: integer
              minimum: 1
              example: 100
          regularExpenditure:
            type: array
            items:
              type: integer
              minimum: 1
              example: 100
    required:
      - loan
      - purchasePrice
      - adults
      - dependents
      - income
  Response:
    type: object
    properties:
      temperature:
        type: integer
        description: temperature of the location
        minimum: 0
        maximum: 60
      humidity:
        type: integer
        description: humidity of the location
        minimum: 0
        maximum: 100
    required:
      - temperature
      - humidity
  APIError:
    type: object
    properties:
      status:
        type: integer
        minimum: 0
        format: int64
      message:
        type: string
      details:
        type: object
        description: Optional objects with extra details on the error.
    required:
      - status
      - message
